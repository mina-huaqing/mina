package com.chinadovey.parking.webapps.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CarlockDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public CarlockDataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSlaveIdIsNull() {
            addCriterion("slave_id is null");
            return (Criteria) this;
        }

        public Criteria andSlaveIdIsNotNull() {
            addCriterion("slave_id is not null");
            return (Criteria) this;
        }

        public Criteria andSlaveIdEqualTo(String value) {
            addCriterion("slave_id =", value, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdNotEqualTo(String value) {
            addCriterion("slave_id <>", value, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdGreaterThan(String value) {
            addCriterion("slave_id >", value, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdGreaterThanOrEqualTo(String value) {
            addCriterion("slave_id >=", value, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdLessThan(String value) {
            addCriterion("slave_id <", value, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdLessThanOrEqualTo(String value) {
            addCriterion("slave_id <=", value, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdLike(String value) {
            addCriterion("slave_id like", value, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdNotLike(String value) {
            addCriterion("slave_id not like", value, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdIn(List<String> values) {
            addCriterion("slave_id in", values, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdNotIn(List<String> values) {
            addCriterion("slave_id not in", values, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdBetween(String value1, String value2) {
            addCriterion("slave_id between", value1, value2, "slaveId");
            return (Criteria) this;
        }

        public Criteria andSlaveIdNotBetween(String value1, String value2) {
            addCriterion("slave_id not between", value1, value2, "slaveId");
            return (Criteria) this;
        }

        public Criteria andOpenStateIsNull() {
            addCriterion("open_state is null");
            return (Criteria) this;
        }

        public Criteria andOpenStateIsNotNull() {
            addCriterion("open_state is not null");
            return (Criteria) this;
        }

        public Criteria andOpenStateEqualTo(Integer value) {
            addCriterion("open_state =", value, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateNotEqualTo(Integer value) {
            addCriterion("open_state <>", value, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateGreaterThan(Integer value) {
            addCriterion("open_state >", value, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("open_state >=", value, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateLessThan(Integer value) {
            addCriterion("open_state <", value, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateLessThanOrEqualTo(Integer value) {
            addCriterion("open_state <=", value, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateIn(List<Integer> values) {
            addCriterion("open_state in", values, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateNotIn(List<Integer> values) {
            addCriterion("open_state not in", values, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateBetween(Integer value1, Integer value2) {
            addCriterion("open_state between", value1, value2, "openState");
            return (Criteria) this;
        }

        public Criteria andOpenStateNotBetween(Integer value1, Integer value2) {
            addCriterion("open_state not between", value1, value2, "openState");
            return (Criteria) this;
        }

        public Criteria andCarStateIsNull() {
            addCriterion("car_state is null");
            return (Criteria) this;
        }

        public Criteria andCarStateIsNotNull() {
            addCriterion("car_state is not null");
            return (Criteria) this;
        }

        public Criteria andCarStateEqualTo(Integer value) {
            addCriterion("car_state =", value, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateNotEqualTo(Integer value) {
            addCriterion("car_state <>", value, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateGreaterThan(Integer value) {
            addCriterion("car_state >", value, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("car_state >=", value, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateLessThan(Integer value) {
            addCriterion("car_state <", value, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateLessThanOrEqualTo(Integer value) {
            addCriterion("car_state <=", value, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateIn(List<Integer> values) {
            addCriterion("car_state in", values, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateNotIn(List<Integer> values) {
            addCriterion("car_state not in", values, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateBetween(Integer value1, Integer value2) {
            addCriterion("car_state between", value1, value2, "carState");
            return (Criteria) this;
        }

        public Criteria andCarStateNotBetween(Integer value1, Integer value2) {
            addCriterion("car_state not between", value1, value2, "carState");
            return (Criteria) this;
        }

        public Criteria andVoltageIsNull() {
            addCriterion("voltage is null");
            return (Criteria) this;
        }

        public Criteria andVoltageIsNotNull() {
            addCriterion("voltage is not null");
            return (Criteria) this;
        }

        public Criteria andVoltageEqualTo(Float value) {
            addCriterion("voltage =", value, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageNotEqualTo(Float value) {
            addCriterion("voltage <>", value, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageGreaterThan(Float value) {
            addCriterion("voltage >", value, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageGreaterThanOrEqualTo(Float value) {
            addCriterion("voltage >=", value, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageLessThan(Float value) {
            addCriterion("voltage <", value, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageLessThanOrEqualTo(Float value) {
            addCriterion("voltage <=", value, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageIn(List<Float> values) {
            addCriterion("voltage in", values, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageNotIn(List<Float> values) {
            addCriterion("voltage not in", values, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageBetween(Float value1, Float value2) {
            addCriterion("voltage between", value1, value2, "voltage");
            return (Criteria) this;
        }

        public Criteria andVoltageNotBetween(Float value1, Float value2) {
            addCriterion("voltage not between", value1, value2, "voltage");
            return (Criteria) this;
        }

        public Criteria andEquiStateIsNull() {
            addCriterion("equi_state is null");
            return (Criteria) this;
        }

        public Criteria andEquiStateIsNotNull() {
            addCriterion("equi_state is not null");
            return (Criteria) this;
        }

        public Criteria andEquiStateEqualTo(Integer value) {
            addCriterion("equi_state =", value, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateNotEqualTo(Integer value) {
            addCriterion("equi_state <>", value, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateGreaterThan(Integer value) {
            addCriterion("equi_state >", value, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("equi_state >=", value, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateLessThan(Integer value) {
            addCriterion("equi_state <", value, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateLessThanOrEqualTo(Integer value) {
            addCriterion("equi_state <=", value, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateIn(List<Integer> values) {
            addCriterion("equi_state in", values, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateNotIn(List<Integer> values) {
            addCriterion("equi_state not in", values, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateBetween(Integer value1, Integer value2) {
            addCriterion("equi_state between", value1, value2, "equiState");
            return (Criteria) this;
        }

        public Criteria andEquiStateNotBetween(Integer value1, Integer value2) {
            addCriterion("equi_state not between", value1, value2, "equiState");
            return (Criteria) this;
        }

        public Criteria andCycleIsNull() {
            addCriterion("cycle is null");
            return (Criteria) this;
        }

        public Criteria andCycleIsNotNull() {
            addCriterion("cycle is not null");
            return (Criteria) this;
        }

        public Criteria andCycleEqualTo(Integer value) {
            addCriterion("cycle =", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleNotEqualTo(Integer value) {
            addCriterion("cycle <>", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleGreaterThan(Integer value) {
            addCriterion("cycle >", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleGreaterThanOrEqualTo(Integer value) {
            addCriterion("cycle >=", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleLessThan(Integer value) {
            addCriterion("cycle <", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleLessThanOrEqualTo(Integer value) {
            addCriterion("cycle <=", value, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleIn(List<Integer> values) {
            addCriterion("cycle in", values, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleNotIn(List<Integer> values) {
            addCriterion("cycle not in", values, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleBetween(Integer value1, Integer value2) {
            addCriterion("cycle between", value1, value2, "cycle");
            return (Criteria) this;
        }

        public Criteria andCycleNotBetween(Integer value1, Integer value2) {
            addCriterion("cycle not between", value1, value2, "cycle");
            return (Criteria) this;
        }

        public Criteria andXhIsNull() {
            addCriterion("xh is null");
            return (Criteria) this;
        }

        public Criteria andXhIsNotNull() {
            addCriterion("xh is not null");
            return (Criteria) this;
        }

        public Criteria andXhEqualTo(Integer value) {
            addCriterion("xh =", value, "xh");
            return (Criteria) this;
        }

        public Criteria andXhNotEqualTo(Integer value) {
            addCriterion("xh <>", value, "xh");
            return (Criteria) this;
        }

        public Criteria andXhGreaterThan(Integer value) {
            addCriterion("xh >", value, "xh");
            return (Criteria) this;
        }

        public Criteria andXhGreaterThanOrEqualTo(Integer value) {
            addCriterion("xh >=", value, "xh");
            return (Criteria) this;
        }

        public Criteria andXhLessThan(Integer value) {
            addCriterion("xh <", value, "xh");
            return (Criteria) this;
        }

        public Criteria andXhLessThanOrEqualTo(Integer value) {
            addCriterion("xh <=", value, "xh");
            return (Criteria) this;
        }

        public Criteria andXhIn(List<Integer> values) {
            addCriterion("xh in", values, "xh");
            return (Criteria) this;
        }

        public Criteria andXhNotIn(List<Integer> values) {
            addCriterion("xh not in", values, "xh");
            return (Criteria) this;
        }

        public Criteria andXhBetween(Integer value1, Integer value2) {
            addCriterion("xh between", value1, value2, "xh");
            return (Criteria) this;
        }

        public Criteria andXhNotBetween(Integer value1, Integer value2) {
            addCriterion("xh not between", value1, value2, "xh");
            return (Criteria) this;
        }

        public Criteria andXlIsNull() {
            addCriterion("xl is null");
            return (Criteria) this;
        }

        public Criteria andXlIsNotNull() {
            addCriterion("xl is not null");
            return (Criteria) this;
        }

        public Criteria andXlEqualTo(Integer value) {
            addCriterion("xl =", value, "xl");
            return (Criteria) this;
        }

        public Criteria andXlNotEqualTo(Integer value) {
            addCriterion("xl <>", value, "xl");
            return (Criteria) this;
        }

        public Criteria andXlGreaterThan(Integer value) {
            addCriterion("xl >", value, "xl");
            return (Criteria) this;
        }

        public Criteria andXlGreaterThanOrEqualTo(Integer value) {
            addCriterion("xl >=", value, "xl");
            return (Criteria) this;
        }

        public Criteria andXlLessThan(Integer value) {
            addCriterion("xl <", value, "xl");
            return (Criteria) this;
        }

        public Criteria andXlLessThanOrEqualTo(Integer value) {
            addCriterion("xl <=", value, "xl");
            return (Criteria) this;
        }

        public Criteria andXlIn(List<Integer> values) {
            addCriterion("xl in", values, "xl");
            return (Criteria) this;
        }

        public Criteria andXlNotIn(List<Integer> values) {
            addCriterion("xl not in", values, "xl");
            return (Criteria) this;
        }

        public Criteria andXlBetween(Integer value1, Integer value2) {
            addCriterion("xl between", value1, value2, "xl");
            return (Criteria) this;
        }

        public Criteria andXlNotBetween(Integer value1, Integer value2) {
            addCriterion("xl not between", value1, value2, "xl");
            return (Criteria) this;
        }

        public Criteria andYhIsNull() {
            addCriterion("yh is null");
            return (Criteria) this;
        }

        public Criteria andYhIsNotNull() {
            addCriterion("yh is not null");
            return (Criteria) this;
        }

        public Criteria andYhEqualTo(Integer value) {
            addCriterion("yh =", value, "yh");
            return (Criteria) this;
        }

        public Criteria andYhNotEqualTo(Integer value) {
            addCriterion("yh <>", value, "yh");
            return (Criteria) this;
        }

        public Criteria andYhGreaterThan(Integer value) {
            addCriterion("yh >", value, "yh");
            return (Criteria) this;
        }

        public Criteria andYhGreaterThanOrEqualTo(Integer value) {
            addCriterion("yh >=", value, "yh");
            return (Criteria) this;
        }

        public Criteria andYhLessThan(Integer value) {
            addCriterion("yh <", value, "yh");
            return (Criteria) this;
        }

        public Criteria andYhLessThanOrEqualTo(Integer value) {
            addCriterion("yh <=", value, "yh");
            return (Criteria) this;
        }

        public Criteria andYhIn(List<Integer> values) {
            addCriterion("yh in", values, "yh");
            return (Criteria) this;
        }

        public Criteria andYhNotIn(List<Integer> values) {
            addCriterion("yh not in", values, "yh");
            return (Criteria) this;
        }

        public Criteria andYhBetween(Integer value1, Integer value2) {
            addCriterion("yh between", value1, value2, "yh");
            return (Criteria) this;
        }

        public Criteria andYhNotBetween(Integer value1, Integer value2) {
            addCriterion("yh not between", value1, value2, "yh");
            return (Criteria) this;
        }

        public Criteria andYlIsNull() {
            addCriterion("yl is null");
            return (Criteria) this;
        }

        public Criteria andYlIsNotNull() {
            addCriterion("yl is not null");
            return (Criteria) this;
        }

        public Criteria andYlEqualTo(Integer value) {
            addCriterion("yl =", value, "yl");
            return (Criteria) this;
        }

        public Criteria andYlNotEqualTo(Integer value) {
            addCriterion("yl <>", value, "yl");
            return (Criteria) this;
        }

        public Criteria andYlGreaterThan(Integer value) {
            addCriterion("yl >", value, "yl");
            return (Criteria) this;
        }

        public Criteria andYlGreaterThanOrEqualTo(Integer value) {
            addCriterion("yl >=", value, "yl");
            return (Criteria) this;
        }

        public Criteria andYlLessThan(Integer value) {
            addCriterion("yl <", value, "yl");
            return (Criteria) this;
        }

        public Criteria andYlLessThanOrEqualTo(Integer value) {
            addCriterion("yl <=", value, "yl");
            return (Criteria) this;
        }

        public Criteria andYlIn(List<Integer> values) {
            addCriterion("yl in", values, "yl");
            return (Criteria) this;
        }

        public Criteria andYlNotIn(List<Integer> values) {
            addCriterion("yl not in", values, "yl");
            return (Criteria) this;
        }

        public Criteria andYlBetween(Integer value1, Integer value2) {
            addCriterion("yl between", value1, value2, "yl");
            return (Criteria) this;
        }

        public Criteria andYlNotBetween(Integer value1, Integer value2) {
            addCriterion("yl not between", value1, value2, "yl");
            return (Criteria) this;
        }

        public Criteria andZhIsNull() {
            addCriterion("zh is null");
            return (Criteria) this;
        }

        public Criteria andZhIsNotNull() {
            addCriterion("zh is not null");
            return (Criteria) this;
        }

        public Criteria andZhEqualTo(Integer value) {
            addCriterion("zh =", value, "zh");
            return (Criteria) this;
        }

        public Criteria andZhNotEqualTo(Integer value) {
            addCriterion("zh <>", value, "zh");
            return (Criteria) this;
        }

        public Criteria andZhGreaterThan(Integer value) {
            addCriterion("zh >", value, "zh");
            return (Criteria) this;
        }

        public Criteria andZhGreaterThanOrEqualTo(Integer value) {
            addCriterion("zh >=", value, "zh");
            return (Criteria) this;
        }

        public Criteria andZhLessThan(Integer value) {
            addCriterion("zh <", value, "zh");
            return (Criteria) this;
        }

        public Criteria andZhLessThanOrEqualTo(Integer value) {
            addCriterion("zh <=", value, "zh");
            return (Criteria) this;
        }

        public Criteria andZhIn(List<Integer> values) {
            addCriterion("zh in", values, "zh");
            return (Criteria) this;
        }

        public Criteria andZhNotIn(List<Integer> values) {
            addCriterion("zh not in", values, "zh");
            return (Criteria) this;
        }

        public Criteria andZhBetween(Integer value1, Integer value2) {
            addCriterion("zh between", value1, value2, "zh");
            return (Criteria) this;
        }

        public Criteria andZhNotBetween(Integer value1, Integer value2) {
            addCriterion("zh not between", value1, value2, "zh");
            return (Criteria) this;
        }

        public Criteria andZlIsNull() {
            addCriterion("zl is null");
            return (Criteria) this;
        }

        public Criteria andZlIsNotNull() {
            addCriterion("zl is not null");
            return (Criteria) this;
        }

        public Criteria andZlEqualTo(Integer value) {
            addCriterion("zl =", value, "zl");
            return (Criteria) this;
        }

        public Criteria andZlNotEqualTo(Integer value) {
            addCriterion("zl <>", value, "zl");
            return (Criteria) this;
        }

        public Criteria andZlGreaterThan(Integer value) {
            addCriterion("zl >", value, "zl");
            return (Criteria) this;
        }

        public Criteria andZlGreaterThanOrEqualTo(Integer value) {
            addCriterion("zl >=", value, "zl");
            return (Criteria) this;
        }

        public Criteria andZlLessThan(Integer value) {
            addCriterion("zl <", value, "zl");
            return (Criteria) this;
        }

        public Criteria andZlLessThanOrEqualTo(Integer value) {
            addCriterion("zl <=", value, "zl");
            return (Criteria) this;
        }

        public Criteria andZlIn(List<Integer> values) {
            addCriterion("zl in", values, "zl");
            return (Criteria) this;
        }

        public Criteria andZlNotIn(List<Integer> values) {
            addCriterion("zl not in", values, "zl");
            return (Criteria) this;
        }

        public Criteria andZlBetween(Integer value1, Integer value2) {
            addCriterion("zl between", value1, value2, "zl");
            return (Criteria) this;
        }

        public Criteria andZlNotBetween(Integer value1, Integer value2) {
            addCriterion("zl not between", value1, value2, "zl");
            return (Criteria) this;
        }

        public Criteria andCollectTimeIsNull() {
            addCriterion("collect_time is null");
            return (Criteria) this;
        }

        public Criteria andCollectTimeIsNotNull() {
            addCriterion("collect_time is not null");
            return (Criteria) this;
        }

        public Criteria andCollectTimeEqualTo(Date value) {
            addCriterion("collect_time =", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeNotEqualTo(Date value) {
            addCriterion("collect_time <>", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeGreaterThan(Date value) {
            addCriterion("collect_time >", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("collect_time >=", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeLessThan(Date value) {
            addCriterion("collect_time <", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeLessThanOrEqualTo(Date value) {
            addCriterion("collect_time <=", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeIn(List<Date> values) {
            addCriterion("collect_time in", values, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeNotIn(List<Date> values) {
            addCriterion("collect_time not in", values, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeBetween(Date value1, Date value2) {
            addCriterion("collect_time between", value1, value2, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeNotBetween(Date value1, Date value2) {
            addCriterion("collect_time not between", value1, value2, "collectTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeIsNull() {
            addCriterion("save_time is null");
            return (Criteria) this;
        }

        public Criteria andSaveTimeIsNotNull() {
            addCriterion("save_time is not null");
            return (Criteria) this;
        }

        public Criteria andSaveTimeEqualTo(Date value) {
            addCriterion("save_time =", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeNotEqualTo(Date value) {
            addCriterion("save_time <>", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeGreaterThan(Date value) {
            addCriterion("save_time >", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("save_time >=", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeLessThan(Date value) {
            addCriterion("save_time <", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeLessThanOrEqualTo(Date value) {
            addCriterion("save_time <=", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeIn(List<Date> values) {
            addCriterion("save_time in", values, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeNotIn(List<Date> values) {
            addCriterion("save_time not in", values, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeBetween(Date value1, Date value2) {
            addCriterion("save_time between", value1, value2, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeNotBetween(Date value1, Date value2) {
            addCriterion("save_time not between", value1, value2, "saveTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parking_carlock_data
     *
     * @mbggenerated do_not_delete_during_merge Fri Apr 14 16:02:52 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parking_carlock_data
     *
     * @mbggenerated Fri Apr 14 16:02:52 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}